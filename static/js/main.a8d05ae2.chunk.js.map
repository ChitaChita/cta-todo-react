{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","ぜーんぶ","しよるけん","task","終わったけね","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d05ae2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          こいせんと？\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        増やすとや\n      </button>\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\n  \nexport default FilterButton;","import React, { useEffect, useRef, useState } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nfunction Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          下んある「 {props.name}」を変えんよ\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n\n\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          取消\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          保存\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          やりかえる<span className=\"visually-hidden\">{props.name}</span>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          消やすよ <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\nexport default Todo;","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  ぜーんぶ: () => true,\n  しよるけん: task => !task.completed,\n  終わったけね: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('ぜーんぶ');\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // このタスクが編集されたタスクと同じIDを持っている場合\n      if (id === task.id) {\n        // スプレッド構文を使って新しいオブジェクトを作る\n        // その 算出プロパティ\n        return { ...task, completed: !task.completed }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return { ...task, name: newName }\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    )\n    );\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n  const tasksNoun = taskList.length !== 1 ? 'こも' : 'こ';\n  const headingText = taskList.length !== 0 ? `${taskList.length} ${tasksNoun} あるけん` : '無かよ';\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"ここんとこ増えるけん\", completed: true },\n  { id: \"todo-1\", name: \"ためしにしてんもー\", completed: false },\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));"],"sourceRoot":""}